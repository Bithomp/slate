---
title: Bithomp API reference

language_tabs: # must be one of https://git.io/vQNgJ
  - shell: cURL
  - javascript: JavaScript
  - php: PHP

toc_footers:
  - <a href='https://bithomp.com/developer'>Request an API Key</a>
  - <a href='https://write.as/bithomp/xrp-ledger-domain-verification'>XRPL domain verification</a>
  - <a href='https://github.com/bithomp/slate'>Edit this documentation on GitHub</a>

includes:
  - errors

search: true
---

# Introduction

Welcome to the Bithomp API!

Bithomp API endpoints will give you access to information on XRPL addresses, usernames, validators, services and more.

We have language bindings in Shell, JavaScript and PHP. You can view code examples in the dark area to the right, and you can switch the programming language of the examples with the tabs in the top right.

Our services used by:

<%= image_tag "images/binance.svg", class:"partner-logo" %>
<%= image_tag "images/ledger-live.jpeg", class:"partner-logo" %>
<%= image_tag "images/coinsph.svg", class:"partner-logo" %>
<%= image_tag "images/edge.svg", class:"partner-logo" %>
<%= image_tag "images/coinfield.png", class:"partner-logo" %>
<%= image_tag "images/xumm.svg", class:"partner-logo" %>

If we're missing your logo here, <a href="https://bithomp.com/contact">contact us</a>.

# Changelog

### 15th June 2021

A query parameter `forensic` was removed from the next API end-points:

* <a href="#address">**Get information for ONE: Address**</a>
* <a href="#username">**Get information for ONE: Username**</a>

You can order "advisorylist" api here:
<a href="https://xrpforensics.org/list/">https://xrpforensics.org/list/</a>.

### 2nd February 2020

Added three new API endpoints:

* <a href="#tx-lookup">**Transaction: Tx Lookup**</a>
* <a href="#tx-decode">**Transaction: Tx Decode**</a>
* <a href="#tx-submit">**Transaction: Tx Submit**</a>

### 22th January 2020

A query parameter `forensic` was added to the next API end-points:

* <a href="#address">**Get information for ONE: Address**</a>
* <a href="#username">**Get information for ONE: Username**</a>

### 20th January 2020

Added three new API endpoints:

* <a href="#services">**Get information of ALL: Services**</a>
* <a href="#addresses-from-services">**Get information of ALL: Addresses from services**</a>
* <a href="#last-update-services">**Get information of ALL: Last update (services/addresses)**</a>

### 17th January 2020

A new endpoint added:

* <a href="#username">**Get information for ONE: Username**</a>

### 11th January 2020

Added two API endpoints:

* <a href="#genesis">**Historical data: Genesis**</a>
* <a href="#history-of-xrp-price-alerts">**Historical data: History of xrp price alerts**</a>

### 27th December 2019

Query parameters: `verifiedDomain` and `hashicon` were added in the API endpoint:

* <a href="#address">**Get information for ONE: Address**</a>

### 17th December 2019

Added two API endpoints:

* <a href="#address">**Get information for ONE: Address**</a>
* <a href="#validator">**Get information for ONE: Validator**</a>

# Direct URL examples

### XRPL Explorer

* <a href="https://bithomp.com/explorer/F10AB598E3197342C8FE173FB3AB5408E30B00F7B4838FDA645BB01AADBD9112">https://bithomp.com/explorer/{txid}</a>
* <a href="https://bithomp.com/explorer/rvYAfWj5gh67oV6fW32ZzP3Aw4Eubs59B">https://bithomp.com/explorer/{address}</a>
* <a href="https://bithomp.com/explorer/bitstamp">https://bithomp.com/explorer/{username}</a>
* <a href="https://bithomp.com/explorer/F10AB598E3197342C8FE173FB3AB5408E30B00F7B4838FDA645BB01AADBD9112#comment">https://bithomp.com/explorer/{txid}#comment</a>
* <a href="https://bithomp.com/explorer/rsuUjfWxrACCAwGQDsNeZUhpzXf1n1NK5Z#comment">
https://bithomp.com/explorer/{address}#comment</a>
* <a href="https://bithomp.com/explorer/Bithomp#comment">
https://bithomp.com/explorer/{username}#comment</a>

### Validator pages

* <a href="https://bithomp.com/validators/nHB8QMKGt9VB4Vg71VszjBVQnDW3v3QudM4DwFaJfy96bj4Pv9fA">https://bithomp.com/validators/{validor pub key}</a>

### Username registration
* <a href="https://bithomp.com/username/Bithomp">https://bithomp.com/username/{username}</a>
* <a href="https://bithomp.com/username/rsuUjfWxrACCAwGQDsNeZUhpzXf1n1NK5Z">https://bithomp.com/username/{address}</a>

### XRPL account activation
* <a href="https://bithomp.com/activation/rsuUjfWxrACCAwGQDsNeZUhpzXf1n1NK5Z">https://bithomp.com/activation/{address}</a>

# Authentication

> To authorize, use this code:

```shell
# With shell, you can just pass the correct header with each request
curl "api_endpoint_here"
  -H "x-bithomp-token: abcd-abcd-0000-abcd-0123abcdabcd"
```

```javascript
// With javascript, you can just pass the correct header with each request
// Include jquery in order to use $.ajax or rewrite to vanila.js

function bithompRequest(url, callback) {
  $.ajax({
     url: url,
     type: "GET",
     contentType: "application/json",
     headers: {
        "x-bithomp-token": "abcd-abcd-0000-abcd-0123abcdabcd"
     },
     success: function(result) {
        callback(result);
     },
     error: function(error) {
        console.log(error);
        callback({"error": "error occurred"});
     }
  });
}

bithompRequest("api_endpoint_here", callback);
//replace callback with your function to process a received json

```

```php
function curl_bithomp($url) {
    $ch = curl_init();
    curl_setopt($ch, CURLOPT_URL, $url);
    curl_setopt($ch, CURLOPT_RETURNTRANSFER, true);
    curl_setopt($ch, CURLOPT_HTTPHEADER,
        array('x-bithomp-token:abcd-abcd-0000-abcd-0123abcdabcd')
    );
    $output = curl_exec($ch);
    curl_close($ch);
    return $output;
}

print curl_bithomp("api_endpoint_here")
```

> Make sure to replace `abcd-abcd-0000-abcd-0123abcdabcd` with your API key.

In order to use our APIs you need to request an API key via [the following form](https://bithomp.com/developer).

Bithomp expects for the API key to be included in all API requests to the server in a header that looks like the following:

`x-bithomp-token: abcd-abcd-0000-abcd-0123abcdabcd`

<aside class="notice">
You must replace <code>abcd-abcd-0000-abcd-0123abcdabcd</code> with your personal API key.
</aside>

# Get information for ONE

## Address

```shell
curl "https://bithomp.com/api/v2/address/rPEPPER7kfTD9w2To4CQk6UCfuHM9c6GDY?service=true&username=true&parent=true&verifiedDomain=true"
  -H "x-bithomp-token: abcd-abcd-0000-abcd-0123abcdabcd"
```

```javascript
function getAddressInfo(json) {
  console.log(json)
}
bithompRequest("https://bithomp.com/api/v2/address/rPEPPER7kfTD9w2To4CQk6UCfuHM9c6GDY?service=true&username=true&parent=true&verifiedDomain=true", getAddressInfo);
```

```php
$addressInfo = curl_bithomp("https://bithomp.com/api/v2/address/rPEPPER7kfTD9w2To4CQk6UCfuHM9c6GDY?service=true&username=true&parent=true&verifiedDomain=true");
print $addressInfo;
```

> The above command returns JSON structured like this:

```json
{
  "address": "rPEPPER7kfTD9w2To4CQk6UCfuHM9c6GDY",
  "xAddress": "XV5sbjUmgPpvXv4ixFWZ5ptAYZ6PD2gYsjNFQLKYW33DzBm",
  "inception": 1513126312,
  "username": "xrptipbot",
  "service": {
    "name": "XRP Tip Bot",
    "domain": "xrptipbot.com",
    "socialAccounts": {
      "twitter": "xrptipbot"
    }
  },
  "verifiedDomain": "xrptipbot.com",
  "parent": {
    "address": "rDsbeomae4FXwgQTJp9Rs64Qg9vDiTCdBv",
    "xAddress": "XV3oNHx95sqdCkTDCBCVsVeuBmvh2du1vBfJR24EqdgwHDW",
    "inception": 1481884572,
    "service": {
      "name": "Bitstamp",
      "domain": "bitstamp.net",
      "socialAccounts": {
        "twitter": "Bitstamp",
        "facebook": "Bitstamp"
      }
    },
  }
}
```

This endpoint retrieves information for a requested XRPL address.

### HTTP Request

`GET https://bithomp.com/api/v2/address/<address>`

### URL Parameters

Parameter | Description
--------- | -----------
address | The XRPL address, can be old r-address or a new X-address

### Query Parameters

Parameter | Default | Description
--------- | ------- | -----------
service | false | If set to true, the result will also include Service details.
username | false | If set to true, the result will also include a username (rippletrade or bithomp).
verifiedDomain | false | If set true, the result will include a <a href="https://coil.com/p/ihomp/XRP-Ledger-domain-verification/uJKPWh_4C">verifiedDomain</a> if such exists.
hashicon | false | If set true, the result will include hashicon which can be used in img's src="" or in css, as background's url. (The icon is the same for x-address and r-address, such hashicons used in ToastWallet and Bithomp.)
parent | false | If set to true, the result will include the same info for a parent account.

<aside class="notice">
Exclude unnecessary parameters to make your request faster.
</aside>

## Username

```shell
curl "https://bithomp.com/api/v2/username/xrptipbot?service=true&parent=true&verifiedDomain=true"
  -H "x-bithomp-token: abcd-abcd-0000-abcd-0123abcdabcd"
```

```javascript
function getData(json) {
  console.log(json)
}
bithompRequest("https://bithomp.com/api/v2/username/xrptipbot?service=true&parent=true&verifiedDomain=true", getData);
```

```php
$data = curl_bithomp("https://bithomp.com/api/v2/username/xrptipbot?service=true&parent=true&verifiedDomain=true");
print $data;
```

> The above command returns JSON structured like this:

```json
{
  "address": "rPEPPER7kfTD9w2To4CQk6UCfuHM9c6GDY",
  "xAddress": "XV5sbjUmgPpvXv4ixFWZ5ptAYZ6PD2gYsjNFQLKYW33DzBm",
  "inception": 1513126312,
  "username": "xrptipbot",
  "service": {
    "name": "XRP Tip Bot",
    "domain": "xrptipbot.com",
    "socialAccounts": {
      "twitter": "xrptipbot"
    }
  },
  "verifiedDomain": "xrptipbot.com",
  "parent": {
    "address": "rDsbeomae4FXwgQTJp9Rs64Qg9vDiTCdBv",
    "xAddress": "XV3oNHx95sqdCkTDCBCVsVeuBmvh2du1vBfJR24EqdgwHDW",
    "inception": 1481884572,
    "service": {
      "name": "Bitstamp",
      "domain": "bitstamp.net",
      "socialAccounts": {
        "twitter": "Bitstamp",
        "facebook": "Bitstamp"
      }
    },
  }
}
```

This endpoint retrieves information for a requested Username.

### HTTP Request

`GET https://bithomp.com/api/v2/username/<username>`

### URL Parameters

Parameter | Description
--------- | -----------
username | A bithomp or an old rippletrade username

### Query Parameters

Parameter | Default | Description
--------- | ------- | -----------
service | false | If set to true, the result will also include Service details.
verifiedDomain | false | If set true, the result will include a <a href="https://coil.com/p/ihomp/XRP-Ledger-domain-verification/uJKPWh_4C">verifiedDomain</a> if such exists.
hashicon | false | If set true, the result will include hashicon which can be used in img's src="" or in css, as background's url. (The icon is the same for x-address and r-address, such hashicons used in ToastWallet and Bithomp.)
parent | false | If set to true, the result will include the same info for a parent account.

<aside class="notice">
Exclude unnecessary parameters to make your request faster.
</aside>

## Validator

```shell
curl "https://bithomp.com/api/v2/validator/nHB8QMKGt9VB4Vg71VszjBVQnDW3v3QudM4DwFaJfy96bj4Pv9fA"
  -H "x-bithomp-token: abcd-abcd-0000-abcd-0123abcdabcd"
```

```javascript
function getValidatorAddress(json) {
  console.log(json.publicKey + " validator's XRPL address: ", json.address);
}
bithompRequest("https://bithomp.com/api/v2/validator/nHB8QMKGt9VB4Vg71VszjBVQnDW3v3QudM4DwFaJfy96bj4Pv9fA", getValidatorAddress);
```

```php
$validatorAddress = curl_bithomp("https://bithomp.com/api/v2/validator/nHB8QMKGt9VB4Vg71VszjBVQnDW3v3QudM4DwFaJfy96bj4Pv9fA");
print $validatorAddress;
```

> The above command returns JSON structured like this:

```json
{
  "publicKey": "nHB8QMKGt9VB4Vg71VszjBVQnDW3v3QudM4DwFaJfy96bj4Pv9fA",
  "address": "rKontEGtDju5MCEJCwtrvTWQQqVAw5juXe"
}
```

This endpoint retrieves a XRPL address of a specific validator
<a href="https://github.com/codetsunami/xrpl-tools/blob/master/validator-address-tool/vatool.js">computed from the validator public key</a>

### HTTP Request

`GET https://bithomp.com/api/v2/validator/<validatorPublicKey>`

### URL Parameters

Parameter | Description
--------- | -----------
validatorPublicKey | The public key of the validator to retrieve

# Get information of ALL

## Services

```shell
curl "https://bithomp.com/api/v2/services"
  -H "x-bithomp-token: abcd-abcd-0000-abcd-0123abcdabcd"
```

```javascript
function getData(json) {
  console.log(json)
}
bithompRequest("https://bithomp.com/api/v2/services", getData);
```

```php
$data = curl_bithomp("https://bithomp.com/api/v2/services");
print $data;
```

> The above command returns JSON structured like this:

```json
{
  "total": 467,
  "lastUpdate": 1579417546,
  "services": [
    {
      "name": "Bithomp",
      "domain": "bithomp.com",
      "socialAccounts": {
        "twitter": "bithomp",
        "youtube": "channel/UCTvrMnG-Tpqi5FN9zO7GcWw",
        "instagram": "bithomp"
      },
      "addresses": [
        {
          "address": "rsuUjfWxrACCAwGQDsNeZUhpzXf1n1NK5Z"
        },
        {
          "address": "rnk3N5hHnLS6nWncNh2R4D2ATiuEicjxXo"
        },
        {
          "address": "rhUYLd2aUiUVYkBZYwTc5RYgCAbNHAwkeZ",
          "name": "Bithomp activation"
        },
        {
          "address": "rBithomp3UNknnjo8HKNfyS5MN4kdPTZpW"
        },
        {
          "address": "rBithomp4vj5E2kUebx7tVwipBueg55XxS",
          "name": "Bithomp donations"
        },
        {
          "address": "rBithompKtixswR4bknJqYaxnm7yRhGYFq",
          "name": "Bithomp username"
        },
        {
          "address": "rKontEGtDju5MCEJCwtrvTWQQqVAw5juXe",
          "name": "Bithomp validator"
        }
      ]
    },
    {

    }
  ]
}
```

This endpoint retrieves a list of identified services.

### HTTP Request

`GET https://bithomp.com/api/v2/services`

### Response Format

Field | Value | Description
----- | ----- | -----------
total	| Integer	| The amount of identified services.
lastUpdate | Integer | UNIX timestamp of the last data update.
services | Array | Array of services.
services[].name | String | A name of a service.
services[].domain | String | A domain of a service.
services[].socialAccounts | Object | An object with social account of a service. (twitter, youtube, instagram, facebook, medium, telegram, linkedin, reddit)
services[].addresses | Array | An array of service's addresses. Each address can have it's own (more specific) name, domain, socialAccounts.

<aside class="notice">
Before downloading the whole list again you can check if it was updated here: <a href="#last-update-services">Last update (services)</a>
</aside>

## Addresses from Services

```shell
curl "https://bithomp.com/api/v2/services/addresses"
  -H "x-bithomp-token: abcd-abcd-0000-abcd-0123abcdabcd"
```

```javascript
function getData(json) {
  console.log(json)
}
bithompRequest("https://bithomp.com/api/v2/services/addresses", getData);
```

```php
$data = curl_bithomp("https://bithomp.com/api/v2/services/addresses");
print $data;
```

> The above command returns JSON structured like this:

```json
{
  "total": 1824,
  "lastUpdate": 1579417546,
  "addresses": {
    "rPEPPER7kfTD9w2To4CQk6UCfuHM9c6GDY": {
      "name": "XRP Tip Bot",
      "domain": "xrptipbot.com",
      "socialAccounts": {
        "twitter": "xrptipbot"
      }
    },
    "r3kmLJN5D28dHuH8vZNUZpMC43pEHpaocV": {
      "name": "Ripple",
      "domain": "ripple.com",
      "socialAccounts": {
        "twitter": "Ripple",
        "facebook": "ripplepay",
        "linkedin": "ripple-labs"
      }
    },
  }
}
```

This endpoint retrieves a list of all identified service addresses.

### HTTP Request

`GET https://bithomp.com/api/v2/services/addresses`

### Response Format

Field | Value | Description
----- | ----- | -----------
total	| Integer	| The amount of identified addresses.
lastUpdate | Integer | UNIX timestamp of the last data update.
addresses | Object | Object with identified addresses.
addresses.ADDRESS.name | String | A name of the ADDRESS's service.
addresses.ADDRESS.domain | String | A domain of the ADDRESS's service.
addresses.ADDRESS.socialAccounts | Object | An object with social account of the ADDRESS's service. (twitter, youtube, instagram, facebook, medium, telegram, linkedin, reddit)

<aside class="notice">
Before downloading the whole list again you can check if it was updated here: <a href="#last-update-services">Last update (services)</a>
</aside>

## Last update (services)

```shell
curl "https://bithomp.com/api/v2/services/lastUpdate"
  -H "x-bithomp-token: abcd-abcd-0000-abcd-0123abcdabcd"
```

```javascript
function getData(json) {
  console.log(json)
}
bithompRequest("https://bithomp.com/api/v2/services/lastUpdate", getData);
```

```php
$data = curl_bithomp("https://bithomp.com/api/v2/services/lastUpdate");
print $data;
```

> The above command returns JSON structured like this:

```json
{
  "lastUpdate": 1579527766,
  "totalServices": 475,
  "totalAddresses": 1832
}
```

This endpoint returns a timestamp of last DB update for services/addresses.

### HTTP Request

`GET https://bithomp.com/api/v2/services/lastUpdate`

### Response Format

Field | Value | Description
----- | ----- | -----------
lastUpdate | Integer	| UNIX timestamp of the last data update.
totalServices | Integer | The amount of identified services.
totalAddresses | Integer | The amount of identified addresses.

# Transaction

## Tx Lookup

```shell
curl "https://bithomp.com/api/v2/transaction/2D6894BCCA14919218576E8204E4715301989D98CAEDA304BB465949459972D3"
  -H "x-bithomp-token: abcd-abcd-0000-abcd-0123abcdabcd"
```

```javascript
function printData(json) {
  console.log(JSON.stringify(json, undefined, 2));
}
bithompRequest("https://bithomp.com/api/v2/transaction/2D6894BCCA14919218576E8204E4715301989D98CAEDA304BB465949459972D3", printData);
```

```php
$data = curl_bithomp("https://bithomp.com/api/v2/transaction/2D6894BCCA14919218576E8204E4715301989D98CAEDA304BB465949459972D3");
print $data;
```

> The above command returns JSON structured like this:

```json
{
  "type": "payment",
  "address": "rBRVqcXrm1YAbanngTxDfH15LNb6TjNmxk",
  "sequence": 98302,
  "id": "2D6894BCCA14919218576E8204E4715301989D98CAEDA304BB465949459972D3",
  "specification": {
    "source": {
      "address": "rBRVqcXrm1YAbanngTxDfH15LNb6TjNmxk",
      "maxAmount": {
        "currency": "XRP",
        "value": "31"
      },
      "tag": 1617004677
    },
    "destination": {
      "address": "rsuUjfWxrACCAwGQDsNeZUhpzXf1n1NK5Z"
    }
  },
  "outcome": {
    "result": "tesSUCCESS",
    "timestamp": "2015-10-24T06:37:00.000Z",
    "fee": "0.020002",
    "balanceChanges": {
      "rBRVqcXrm1YAbanngTxDfH15LNb6TjNmxk": [
        {
          "currency": "XRP",
          "value": "-31.020002"
        }
      ],
      "rsuUjfWxrACCAwGQDsNeZUhpzXf1n1NK5Z": [
        {
          "currency": "XRP",
          "value": "31"
        }
      ]
    },
    "orderbookChanges": {},
    "ledgerVersion": 16658556,
    "indexInLedger": 4,
    "deliveredAmount": {
      "currency": "XRP",
      "value": "31"
    }
  }
}
```

This endpoint retrieves transaction details.
<br>
Page where it used on bithomp:
<a href="https://bithomp.com/explorer/2D6894BCCA14919218576E8204E4715301989D98CAEDA304BB465949459972D3">
  https://bithomp.com/explorer/2D6894BCCA14919218576E8204E4715301989D98CAEDA304BB465949459972D3
</a>.

### HTTP Request

`GET https://bithomp.com/api/v2/transaction/<id>`

### URL Parameters

Parameter | Description
--------- | -----------
id | Transaction id (hash)

<aside class="warning">
  A fee to use this endpoint might be introduced in the feature to support a third party Full History Node operator.
</aside>

## Tx Decode

```shell
curl "https://bithomp.com/api/v2/transaction/decode/1200032280000000240000003241833237B8665D2F4E00135E8DE646589F68400000000000000C732103709723A5967EAAED571B71DB511D87FA44CC7CDDF827A37F457A25E14D862BCD74473045022100C6A6999BD33153C6A236D78438D1BFEEEC810CFE05D0E41339B577560C9143CA022074F07881F559F56593FF680049C12FC3BCBB0B73CE02338651522891D95886F981146078086881F39B191D63B528D914FEA7F8CA2293F9EA7C06636C69656E747D15426974686F6D7020746F6F6C20762E20302E302E337E0A706C61696E2F74657874E1F1"
  -H "x-bithomp-token: abcd-abcd-0000-abcd-0123abcdabcd"
```

```javascript
function printData(json) {
  console.log(JSON.stringify(json, undefined, 2));
}
bithompRequest("https://bithomp.com/api/v2/transaction/decode/1200032280000000240000003241833237B8665D2F4E00135E8DE646589F68400000000000000C732103709723A5967EAAED571B71DB511D87FA44CC7CDDF827A37F457A25E14D862BCD74473045022100C6A6999BD33153C6A236D78438D1BFEEEC810CFE05D0E41339B577560C9143CA022074F07881F559F56593FF680049C12FC3BCBB0B73CE02338651522891D95886F981146078086881F39B191D63B528D914FEA7F8CA2293F9EA7C06636C69656E747D15426974686F6D7020746F6F6C20762E20302E302E337E0A706C61696E2F74657874E1F1", printData);
```

```php
$data = curl_bithomp("https://bithomp.com/api/v2/transaction/decode/1200032280000000240000003241833237B8665D2F4E00135E8DE646589F68400000000000000C732103709723A5967EAAED571B71DB511D87FA44CC7CDDF827A37F457A25E14D862BCD74473045022100C6A6999BD33153C6A236D78438D1BFEEEC810CFE05D0E41339B577560C9143CA022074F07881F559F56593FF680049C12FC3BCBB0B73CE02338651522891D95886F981146078086881F39B191D63B528D914FEA7F8CA2293F9EA7C06636C69656E747D15426974686F6D7020746F6F6C20762E20302E302E337E0A706C61696E2F74657874E1F1");
print $data;
```

> The above command returns JSON structured like this:

```json
{
  "id": "9B124C14528ED14C0BDA17075A39B90ABED598B77A22DFEEBD913CAC07A513BC",
  "signedTransaction": {
    "TransactionType": "AccountSet",
    "Flags": 2147483648,
    "Sequence": 50,
    "EmailHash": "833237B8665D2F4E00135E8DE646589F",
    "Fee": "12",
    "SigningPubKey": "03709723A5967EAAED571B71DB511D87FA44CC7CDDF827A37F457A25E14D862BCD",
    "TxnSignature": "3045022100C6A6999BD33153C6A236D78438D1BFEEEC810CFE05D0E41339B577560C9143CA022074F07881F559F56593FF680049C12FC3BCBB0B73CE02338651522891D95886F9",
    "Account": "r9onCSkYP2tYcukw2KUHMZ1Sn5YixQCgmN",
    "Memos": [
      {
        "Memo": {
          "MemoType": "636C69656E74",
          "MemoData": "426974686F6D7020746F6F6C20762E20302E302E33",
          "MemoFormat": "706C61696E2F74657874"
        }
      }
    ]
  }
}
```

This endpoint decode a signed transaction.
<br>
Page on bithomp with the same decode function, but client-side:
<a href="https://bithomp.com/submit/">
  https://bithomp.com/submit/
</a>.

### HTTP Request

`GET https://bithomp.com/api/v2/transaction/decode/<blob>`

### URL Parameters

Parameter | Description
--------- | -----------
blob | A signed transaction blob to decode

## Tx Submit

```shell
curl -H "Content-Type: application/json"
  -H "x-bithomp-token: abcd-abcd-0000-abcd-0123abcdabcd"
  --request POST
  --data '{"signedTransaction":"1200032280000000240000000368400000000000000C732103A71B44FD71C956C3CC0A540F2FBB577C4A300BC71244D86E4EB57220E58BFA26744730450221008D53E4188B39E8EF9953672B42C7ED3F7760F4B2FA51EC91A6EB0B693A6002B2022016384B9F552C75FD3BDE13C65E1CC3DA646AB10E3DD785EB2005620C6AF2C52B7710746573742E626974686F6D702E636F6D811485C536EFA7EAACCC51916E32FF720810A2226008F9EA7C06636C69656E747D16426974686F6D7020746F6F6C20762E20302E342E31317E0A706C61696E2F74657874E1F1","id":"BC35145B69F75FE5B41D6198D56203C2CFD2C1D968C09B09A37530CCB3AD2C6D"}'
  https://bithomp.com/api/v2/transaction/submit/
```

```javascript
$.ajax({
   url: "https://bithomp.com/api/v2/transaction/submit/",
   type: "POST",
   contentType: "application/json",
   headers: {
      "x-bithomp-token": "abcd-abcd-0000-abcd-0123abcdabcd"
   },
   data: {
     "signedTransaction": "1200032280000000240000000368400000000000000C732103A71B44FD71C956C3CC0A540F2FBB577C4A300BC71244D86E4EB57220E58BFA26744730450221008D53E4188B39E8EF9953672B42C7ED3F7760F4B2FA51EC91A6EB0B693A6002B2022016384B9F552C75FD3BDE13C65E1CC3DA646AB10E3DD785EB2005620C6AF2C52B7710746573742E626974686F6D702E636F6D811485C536EFA7EAACCC51916E32FF720810A2226008F9EA7C06636C69656E747D16426974686F6D7020746F6F6C20762E20302E342E31317E0A706C61696E2F74657874E1F1",
     "id": "BC35145B69F75FE5B41D6198D56203C2CFD2C1D968C09B09A37530CCB3AD2C6D"
   },
   success: function(result) {
      console.log(JSON.stringify(result, undefined, 2));
   },
   error: function(error) {
      console.log(error);
   }
});
```

> The above command returns JSON structured like one of those:

```json
{
  "result": "tesSUCCESS",
  "id": "BC35145B69F75FE5B41D6198D56203C2CFD2C1D968C09B09A37530CCB3AD2C6D"
}

{
  "result": "terNO_ACCOUNT",
  "message": "The source account does not exist.",
  "id": "BC35145B69F75FE5B41D6198D56203C2CFD2C1D968C09B09A37530CCB3AD2C6D"
}

{
  "result": "terPRE_SEQ",
  "message": "Missing/inapplicable prior transaction.",
  "id": "BC35145B69F75FE5B41D6198D56203C2CFD2C1D968C09B09A37530CCB3AD2C6D"
}

```

This endpoint returns a final status of a submitted transaction.
<br>
Page where it used on bithomp:
<a href="https://bithomp.com/explorer/?hwlogin">
  https://bithomp.com/explorer/?hwlogin
</a>.

### HTTP Request

`POST https://bithomp.com/api/v2/transaction/submit`

### POST Parameters

Parameter | Description
--------- | -----------
id | (Optional) A calculated hash of the signed transaction
signedTransaction | A blob of signed transaction to submit

# Historical data

## Genesis

```shell
curl "https://bithomp.com/api/v2/genesis"
  -H "x-bithomp-token: abcd-abcd-0000-abcd-0123abcdabcd"
```

```javascript
function printData(json) {
  console.log(JSON.stringify(json, undefined, 2));
}
bithompRequest("https://bithomp.com/api/v2/genesis", printData);
```

```php
$data = curl_bithomp("https://bithomp.com/api/v2/genesis");
print $data;
```

> The above command returns JSON structured like this:

```json
{
  "count": 136,
  "inception": 1357010470,
  "ledger_index": 32570,
  "genesis_balance_all": 99999999999.99632,
  "balance_all": 483189349.682485,
  "balance_update": 1578499794,
  "genesis": [
    {
      "address": "rBKPS4oLSaV2KVVuHH8EpQqMGgGefGFQs7",
      "genesis_balance": 370,
      "genesis_index": 1,
      "balance": 20.009958
    },
    {
      "address": "rLs1MzkFWCxTbuAHgjeTZK4fcCDDnf2KRv",
      "genesis_balance": 10000,
      "genesis_index": 2,
      "rippletrade": "leotreasure",
      "balance": 4507.158497
    },
    {

    }
  ]
}
```

This endpoint retrieves a list of addresses from the first available ledger in XRPL history.
<br>
Page where it used on bithomp:
<a href="https://bithomp.com/genesis">https://bithomp.com/genesis</a>.

### HTTP Request

`GET https://bithomp.com/api/v2/genesis`

### Response Format

Field | Value | Description
----- | ----- | -----------
count	| Integer	| The amount of returned addresses.
inception	| Integer	| Inception UNIX timestamp.
ledger_index | Integer | Ledger index (the first available in history).
genesis_balance_all | Float | Sum of all balances in the ledger_index.
balance_all | Float | Sum of balances of those addresses on the balance_update time.
balance_update | Integer | UNIX timestamp of the last update of balances.
genesis | Array | Array of addresses in ledger_index.
genesis[].address | String | Address
genesis[].genesis_balance | Float | XRP balance on that genesis[].address on the time of inception.
genesis[].genesis_index | Integer | Index of the address in the ledger_index.
genesis[].rippletrade | String | Username that genesis[].address used on rippletrade.com.
genesis[].nickname | String | Username that genesis[].address used on bitcointalk.org or assign by Ripple (X.).
genesis[].balance | Float | XRP balance on that genesis[].address on the time of balance_update.

## History of XRP price alerts

```shell
curl "https://bithomp.com/api/v2/price/xrp/alerts"
  -H "x-bithomp-token: abcd-abcd-0000-abcd-0123abcdabcd"
```

```javascript
function printData(json) {
  console.log(JSON.stringify(json, undefined, 2));
}
bithompRequest("https://bithomp.com/api/v2/price/xrp/alerts", printData);
```

```php
$data = curl_bithomp("https://bithomp.com/api/v2/price/xrp/alerts");
print $data;
```

> The above command returns JSON structured like this:

```json
{
  "count": 50,
  "timestamp": 1578748266,
  "alerts": [
    {
      "currency": "btc",
      "change": "-10.07%",
      "timestamp_old": 1578344400,
      "timestamp_new": 1578415200,
      "rate_old": 0.00002959,
      "rate_new": 0.00002661
    },
    {
      "currency": "btc",
      "change": "+10.02%",
      "timestamp_old": 1578297600,
      "timestamp_new": 1578327600,
      "rate_old": 0.00002616,
      "rate_new": 0.00002878
    },
    {

    }
  ]
}
```

This endpoint retrieves a list of our XRP price alerts.
<br>
Page where it used on bithomp:
<a href="https://bithomp.com/alerts">https://bithomp.com/alerts</a>.

### HTTP Request

`GET https://bithomp.com/api/v2/price/xrp/alerts`

### Response Format

Field | Value | Description
----- | ----- | -----------
count | Integer	The amount of returned alert records.
timestamp | Integer | UNIX timestamp for a request.
alerts | Array | Array of alert records.
genesis[].currency | String | Currency (in XRP/currency pair).
genesis[].change | String | Price change percentage (ex.: +10.24%).
genesis[].timestamp_old | Integer | Unix timestamp in seconds for the price: genesis[].rate_old.
genesis[].timestamp_new | Integer | Unix timestamp in seconds for the price: genesis[].rate_new.
genesis[].rate_old | Float | The price at genesis[].timestamp_old.
genesis[].rate_new | Float | The price at genesis[].timestamp_new.
